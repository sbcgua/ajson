AJSON changelog
===============

Legend
------
* : fixed
! : changed
+ : added
- : removed

v1.1.11, 2025-02-24
------------------
* Fix touch_array with keep order (#178, @mbtools)
* Fix conversion of string to packed #179
* Fix filter walk order for arrays (based on array index), (#183, @cwildt)
* Fix to_abap for sorted/hashed table empty components (#181, #182, @thorsten-wolf-neptune)
* Keep mapper when slice (#195, jrodriguez-rc)
+ Support xstring and string_table as input for parser (#190, @mbtools)

v1.1.10, 2024-02-04
------------------
* downport utilities testclass (#170, @mbtools)
* proper support for time data type (#172, @oblomov-dev)

v1.1.9, 2023-08-09
------------------
! use cx_dynamic_check instead of cx_sxml_error (#153)
* Slice performance improvement (#156, @jrodriguez-rc)
* Improve steampunk compatibility (#159,#160, @larshp)
* Fix set with keep item order (#165, @mbtools)
+ iv_corresponding flag in to_abap (#161, #162, @christianguenter2)
+ to_abap_corresponding_only opt flag (#161)
+ Keep item order when parsing #166
+ improvements in CI, unit tests in github actions thanks to abap transpiler by @larshp
* Improve included types processing, reuse cl_abap_structdescr=>get_included_view (#168, @mathieulawnik)

v1.1.8, 2023-02-16
------------------
! Change package structure (core, libs, perf) #146
! move most of types from zif_ajson to zif_ajson_types
* Parser performance improvements (#143, @mbtools)
* Cloud compatibility (#147)

v1.1.7, 2023-01-08
------------------
* Fixed keep order when overwriting existing node values (#113)
* Use ":" as timestamp time separator (#122, @jrodriguez-rc)
* Fixed proper initial timestamp formatting (#120, @jrodriguez-rc)
* Fix warning related to timestamp rounding (#129, @mbtools)
* Fixed keeping internal options (keep_order, date_format) while cloning an instance (#137)
+ Support ENUM types (#116, @christianguenter2)
+ Added zif_ajson->opts methods, to get current instance behavior parameters
+ Added possibility to filter path by pattern (cp-like)
+ Added possibility to acqure only corresponding fields to abap structure (#125, #8, @postavka)
* fixes in UTs to be compatible with 7.02 (#134, @schneidermic0)
* code cleanups (usage of syst #135, avoid built-in names #136, @mbtools)
+ added "new" method. As a replacement for "create_empty" (which might be DEPRECATED!)
+ New mapper approach, changed interface (rename_node method) and implementation. Old approach (to_abap/to_json) will be DEPRECATED!. (#117)
+ Added semantically better methods for cloning: clone, map, filter (#117)
+ Added setx method for simple text-based value setting (#142)

v1.1.6, 2022-07-15
------------------
* fixed camel case convertion issue @jrodriguez-rc (#110)
+ added is_empty method, returns true if json has no content
+ added is_equal utility, returns true if 2 jsons (or json strings) are equal

v1.1.5, 2022-05-09
------------------
* internal type constants improvements @mbtools (#107)

v1.1.4, 2022-05-09
------------------
! Changed the default datetime formatting to ISO (YYYY-MM-DD) instead of ABAP (YYYYMMDD) #101
* better handling of incorrect JSON, as the native SAP parser does not properly signal if the content is json or xml (#97)
* Fix dump in case of components with initial references @mbtools (#99)
* Fix `ITAB_DUPLICATE_KEY` (nested tables path) and CamelCase @mbtools (#100)
* Fix issue with pushing ajson instances to an array

v1.1.3, 2022-04-12
------------------
* fix camel case conversion for deep strcutures @mbtools
+ auto format date/time (YYYY-MM-DD / HH:MM:SS) when found in structures, use format_datetime method to enable. Might become the default in future !

v1.1.2, 2021-12-24
------------------
! heavy refactoring in json_to_abap logic, support for conversion to sorted/hashed tabs, better perf tests separation. Thanks @albertmind for the initial issue and UT submission

v1.1.1, 2021-12-03
------------------
+ json filtering #71, #72 - empty values, predefined paths, generic filtering possibility
+ more boolean types autodetection @larshp
+ better parser error location reporting @mbtools
+ simple performance test: zajson_perf_test

v1.1.0, 2021-09-08
------------------
! BREAKING: Remove separate interfaces for reader/writer.
+ set, delete, touch_array, push and some other methods now support chaining for convenience
* type cleanups @larshp

v1.0.4, 2021-06-22
------------------
! BREAKING: Move types, constants to zif_ajson, also alias methods of reader/writer
+ keep_item_order feature: stringify object elements in the order it appears in abap structure
+ custom field name mappers (zif_ajson_mapping), thanks to @jrodriguez-rc
+ timestamps support (get and set), @jrodriguez-rc
- removed direct reference to zif_ajson_reader/writer from the main class @mbtools
* fixed hashed table item index @mbtools
* better unit tests and cleanups @larshp

v1.0.3, 2021-01-09
------------------
A stable version before interface changes !
! move stringify to writer interface
* diff fixes @mbtools
* node types to constants @jrodriguez-rc
